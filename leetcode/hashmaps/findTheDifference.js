// https://leetcode.com/problems/find-the-difference/

/*
You are given two strings s and t.

String t is generated by random shuffling string s and then add one more letter at a random position.

Return the letter that was added to t.

Example 1:
Input: s = "abcd", t = "abcde"
Output: "e"
Explanation: 'e' is the letter that was added.

Example 2:
Input: s = "", t = "y"
Output: "y"

Constraints:
0 <= s.length <= 1000
t.length == s.length + 1
s and t consist of lowercase English letters.
*/

/*
  @param {string} s
  @param {string} t
  @return {character}
 */
var findTheDifference = function (s, t) {
  //  create empty map
  let map = {};

  // loop through the longer string first, if character isnt already in map, set the character and give it a value of 1. If it already exists, add 1 to its value.
  for (let i = 0; i < t.length; i++) {
    if (!map[t[i]]) {
      map[t[i]] = 1;
    } else {
      map[t[i]] += 1;
    }
  }

  // loop through s. For each character/iteration, subtract 1 from the value.
  for (let i = 0; i < s.length; i++) {
    if (map[s[i]]) {
      map[s[i]] -= 1;
    }
  }

  // loop through the final map and return the key whos value is equal to 1.
  for (let [key, value] of Object.entries(map)) {
    if (value === 1) {
      return key;
    }
  }
};
